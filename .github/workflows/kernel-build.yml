name: Kernel Build with Ubuntu Repository Toolchains

on:
  push:
    branches:
      - WIP  # Triggers the action on pushes to the WIP branch
  pull_request:
    branches:
      - WIP  # Optionally build on pull requests to the WIP branch

jobs:
  build:
    runs-on: ubuntu-latest  # The environment to run on (Ubuntu)

    steps:
    - name: Checkout Nethunter kernel source
      uses: actions/checkout@v3
      with:
        repository: MK-986123/Nethunter_kernel_samsung_dm3q
        ref: WIP  # Using 'WIP' branch for Nethunter kernel
        fetch-depth: 0  # Ensures full history is fetched
        clean: true  # Cleans any previous files

    - name: Checkout AnyKernel3 source
      uses: actions/checkout@v3
      with:
        repository: MK-986123/AnyKernel3
        ref: master  # Using 'master' branch for AnyKernel3
        path: AnyKernel3
        fetch-depth: 0  # Ensures full history is fetched
        clean: true  # Cleans any previous files

    - name: Set up build environment
      run: |
        # Update the system and install required build tools
        sudo apt-get update
        sudo apt-get install -y build-essential git bc bison flex libncurses5-dev curl zip libssl-dev libelf-dev python3-pip
        # Install the toolchains from the Ubuntu repository
        sudo apt-get install -y clang llvm lld gcc-aarch64-linux-gnu
        # Install kconfiglib for menuconfig support
        pip3 install kconfiglib

    - name: Create custom kernel config for NetHunter
      run: |
        # Create a custom configuration file for NetHunter features
        echo "CONFIG_USB_GADGET=y" >> nethunter_defconfig
        echo "CONFIG_HID_GADGET=y" >> nethunter_defconfig
        echo "CONFIG_USB_F_ACM=y" >> nethunter_defconfig
        echo "CONFIG_USB_F_HID=y" >> nethunter_defconfig
        echo "CONFIG_CFG80211=y" >> nethunter_defconfig
        echo "CONFIG_MAC80211=y" >> nethunter_defconfig
        echo "CONFIG_BT=y" >> nethunter_defconfig
        echo "CONFIG_BT_RFCOMM=y" >> nethunter_defconfig
        echo "CONFIG_BT_RFCOMM_TTY=y" >> nethunter_defconfig
        echo "CONFIG_EXT4_FS=y" >> nethunter_defconfig
        echo "CONFIG_VFAT_FS=y" >> nethunter_defconfig

    - name: Configure kernel for NetHunter
      run: |
        # Export environment variables for Clang and cross-compiler
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-  # Use aarch64 cross-compiler from Ubuntu repository
        export CC=clang
        export LD=ld.lld

        # Clean any previous build artifacts
        make clean && make mrproper

        # Merge the custom configuration with the default kalama-gki_defconfig
        make kalama-gki_defconfig O=out
        scripts/kconfig/merge_config.sh out/.config nethunter_defconfig

        # Optionally, if manual menuconfig is needed to inspect, uncomment the next line
        # make menuconfig O=out

    - name: Build the kernel with Clang and aarch64 cross-compiler
      run: |
        # Build the kernel using Clang, LLD, and aarch64 cross-compiler
        make -j$(nproc) CC=clang LD=ld.lld KBUILD_COMPILER_STRING="Clang $(clang --version)" O=out

    - name: Package the kernel with AnyKernel3
      run: |
        # Copy compiled kernel to AnyKernel3 directory
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        
        # Create a flashable zip
        cd AnyKernel3
        zip -r9 kernel.zip ./*
        cd ..

    - name: Upload kernel.zip artifact
      uses: actions/upload-artifact@v3
      with:
        name: kernel.zip
        path: AnyKernel3/kernel.zip
