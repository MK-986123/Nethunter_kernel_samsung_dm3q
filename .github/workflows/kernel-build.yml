name: Kernel Build with GCC for Qualcomm and Samsung

on:
  push:
    branches:
      - WIP
  pull_request:
    branches:
      - WIP

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Nethunter kernel source
      uses: actions/checkout@v3
      with:
        repository: MK-986123/Nethunter_kernel_samsung_dm3q
        ref: WIP
        fetch-depth: 0
        clean: true

    - name: Checkout AnyKernel3 source
      uses: actions/checkout@v3
      with:
        repository: MK-986123/AnyKernel3
        ref: master
        path: AnyKernel3
        fetch-depth: 0
        clean: true

    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git bc bison flex libncurses5-dev curl zip libssl-dev libelf-dev python3-pip

        # Install GCC and ARM Cross-Compiler
        sudo apt-get install -y gcc-10 aarch64-linux-gnu-gcc-10

    - name: Configure kernel for NetHunter
      run: |
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-  # Use GCC 10.x cross-compiler
        export CC=gcc

        # Use the kalama_gki_defconfig or stock-dm3q_defconfig based on availability
        if [ -f arch/arm64/configs/vendor/kalama_gki_defconfig ]; then
          make ARCH=arm64 vendor/kalama_gki_defconfig O=out
        elif [ -f arch/arm64/configs/stock-dm3q_defconfig ]; then
          make ARCH=arm64 stock-dm3q_defconfig O=out
        else
          echo "No valid defconfig found!"
          exit 1
        fi

        # Merge the custom configuration with the chosen defconfig
        scripts/kconfig/merge_config.sh out/.config nethunter_defconfig

    - name: Build the kernel with GCC and aarch64 cross-compiler
      run: |
        make -j$(nproc) CC=gcc CROSS_COMPILE=aarch64-linux-gnu- O=out

    - name: Package the kernel with AnyKernel3
      run: |
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        cd AnyKernel3
        zip -r9 kernel.zip ./*
        cd ..

    - name: Upload kernel.zip artifact
      uses: actions/upload-artifact@v3
      with:
        name: kernel.zip
        path: AnyKernel3/kernel.zip
