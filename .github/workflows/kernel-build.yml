name: Kernel Build with Samsung SM-S901E Toolchain

on:
  push:
    branches:
      - WIP
  pull_request:
    branches:
      - WIP

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Nethunter kernel source
      uses: actions/checkout@v3
      with:
        repository: MK-986123/Nethunter_kernel_samsung_dm3q
        ref: WIP
        fetch-depth: 0
        clean: true

    - name: Checkout AnyKernel3 source
      uses: actions/checkout@v3
      with:
        repository: MK-986123/AnyKernel3
        ref: master
        path: AnyKernel3
        fetch-depth: 0
        clean: true

    - name: Set up Samsung SM-S901E toolchain
      run: |
        # Clone the Samsung toolchain repo
        git clone https://github.com/iamimmanuelraj/toolchain_samsung_SM_S901E.git

        # Export paths for the toolchain
        export TOOLCHAIN_DIR=$PWD/toolchain_samsung_SM_S901E/prebuilts/clang/host/linux-x86/clang-r416183b/bin
        export PATH=$PATH:$TOOLCHAIN_DIR
        export CROSS_COMPILE=$TOOLCHAIN_DIR/aarch64-linux-gnu-
        export LD=$TOOLCHAIN_DIR/ld.lld  # Use LLVM's linker if present

    - name: Configure kernel for NetHunter
      run: |
        export ARCH=arm64

        # Use the kalama_gki_defconfig or stock-dm3q_defconfig based on availability
        if [ -f arch/arm64/configs/vendor/kalama_gki_defconfig ]; then
          make ARCH=arm64 vendor/kalama_gki_defconfig O=out
        elif [ -f arch/arm64/configs/stock-dm3q_defconfig ]; then
          make ARCH=arm64 stock-dm3q_defconfig O=out
        else
          echo "No valid defconfig found!"
          exit 1
        fi

    - name: Build the kernel with Samsung toolchain
      run: |
        make -j$(nproc) CC=clang CROSS_COMPILE=$CROSS_COMPILE O=out

    - name: Package the kernel with AnyKernel3
      run: |
        # Check if the output kernel image exists
        if [ -f out/arch/arm64/boot/Image.gz-dtb ]; then
          cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        else
          echo "Error: Kernel image not found!"
          exit 1
        fi

        # Create the zip file
        cd AnyKernel3
        zip -r9 kernel.zip ./*
        cd ..

    - name: Upload kernel.zip artifact
      uses: actions/upload-artifact@v3
      with:
        name: kernel.zip
        path: AnyKernel3/kernel.zip
