name: Kernel Build Workflow for SM-S918B

on:
  push:
    branches:
      - WIP

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Source Code
      uses: actions/checkout@v3

    - name: Install prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential bc libssl-dev libncurses-dev bison flex libelf-dev ccache
        python3 -m pip install --upgrade pip
        python3 -m pip install gdown

    - name: Download Samsung Toolchain from Google Drive
      run: |
        gdown https://drive.google.com/uc?id=19L40u5xz02NfwnlkevfX_fCwaFLjBqiY -O toolchain.tar.gz

    - name: Extract Samsung Toolchain
      run: |
        mkdir toolchain
        tar -xvf toolchain.tar.gz -C toolchain

    - name: Clean the source tree
      run: make mrproper || true

    - name: Disable logging features (fix perflog.h error)
      run: echo "CONFIG_ANDROID_LOGGING=n" >> out/.config

    - name: Fix patsubst error in Kbuild
      run: sed -i 's/\$(patsubst %.o,%.c,$(obj-y)))/\$(patsubst %.o,%.c,\$(obj-y))/' drivers/staging/qcacld-3.0/Kbuild

    - name: Configure kernel for SM-S918B NetHunter
      run: |
        make O=out ARCH=arm64 CROSS_COMPILE=$GITHUB_WORKSPACE/toolchain/aarch64-linux-gnu- kalama_gki_defconfig

    - name: Build the kernel with Samsung toolchain
      run: |
        make O=out -j$(nproc) ARCH=arm64 CROSS_COMPILE=$GITHUB_WORKSPACE/toolchain/aarch64-linux-gnu-

    - name: Verify kernel image
      run: ls out/arch/arm64/boot/Image.gz-dtb

    - name: Package the kernel with AnyKernel3
      run: |
        cd AnyKernel3
        cp ../out/arch/arm64/boot/Image.gz-dtb .
        zip -r9 kernel.zip *

    - name: Upload kernel.zip artifact
      uses: actions/upload-artifact@v3
      with:
        name: kernel.zip
        path: AnyKernel3/kernel.zip
